[gcode_macro _VARS]
variable_fast_iteration: False
variable_heatsoak_mins: 90

variable_dock_location_x: 55
variable_dock_location_y: 295
# The toolhead moves to the dock's position, but forwards by this
# amount in Y, in preparation for attaching/detaching the probe.
variable_dock_attach_offset_y: 20
# After depositing the probe back in the dock, the toolhead moves this
# much in X to actually detach the probe.
variable_dock_postdock_offset_x: 40
# How fast the toolhead moves during docking operations.
variable_dock_move_speed: 100
# Minimum Z height for probe attach/detach operations.
variable_z_height_for_dock: 25 # Altitude for dock operations

gcode:
	M117

[gcode_macro _CHECK_HOMED]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
	  { action_raise_error("cannot do operation if not homed") }
	{% endif %}
	M400

[gcode_macro _MOVE_TO_SAFE_Z_FOR_DOCK]
gcode:
	{% if 'z' not in printer.toolhead.homed_axes %}
	  { action_raise_error("Z not homed, cannot move") }
	{% endif %}
	{% set safe_z_height = printer["gcode_macro _VARS"].z_height_for_dock %}
	{% if printer.toolhead.position.z < safe_z_height %}
	G90
	G0 Z{safe_z_height}
	{% endif %}

[gcode_macro _ASSERT_PROBE]
gcode:
	QUERY_PROBE
	_ASSERT_PROBE_INTERNAL want_attached={ params.WANT_ATTACHED }

[gcode_macro _ASSERT_PROBE_INTERNAL]
gcode:
	{% set want_attached = params.WANT_ATTACHED|int %}
	{% set got_attached = not printer.probe.last_query %}
	{% if want_attached and (not got_attached) %}
	  { action_raise_error("probe attach failed") }
	{% endif %}
	{% if (not want_attached) and got_attached %}
	  { action_raise_error("probe dock failed") }
	{% endif %}

[gcode_macro ATTACH_PROBE]
gcode:
	_CHECK_HOMED
	QUERY_PROBE
	_MAYBE_ATTACH_PROBE

[gcode_macro _MAYBE_ATTACH_PROBE]
gcode:
    {% set probe_triggered = printer.probe.last_query %}
	{% set safe_z_height = printer["gcode_macro _VARS"].z_height_for_dock %}
	{% if probe_triggered %}
	  # Could be triggered either because not attached, or because
	  # attached but touching the bed.
	  {% if printer.toolhead.position.z < safe_z_height %}
        # Move to safe height and try again.
	    _MOVE_TO_SAFE_Z_FOR_DOCK
	    QUERY_PROBE
	  {% endif %}
      _ATTACH_PROBE
	{% endif %}

[gcode_macro _ATTACH_PROBE]
gcode:
    {% set probe_detached = printer.probe.last_query %}
	{% if probe_detached %}
  	  {% set dock_x = printer["gcode_macro _VARS"].dock_location_x %}
  	  {% set dock_y = printer["gcode_macro _VARS"].dock_location_y %}
  	  {% set feedrate = printer["gcode_macro _VARS"].dock_move_speed * 60 %}
  	  {% set offset_y = printer["gcode_macro _VARS"].dock_attach_offset_y %}
	  {% set predock_y = dock_y - offset_y %}
	  _MOVE_TO_SAFE_Z_FOR_DOCK
	  G90
	  {% if printer.toolhead.position.y > predock_y %}
        G0 Y{predock_y} F{feedrate}
	  {% endif %}
	  G0 X{dock_x} Y{predock_y} F{feedrate}
	  G0 Y{dock_y} F{feedrate}
	  G0 Y{predock_y} F{feedrate}
	{% endif %}
	_ASSERT_PROBE WANT_ATTACHED=1

[gcode_macro DOCK_PROBE]
gcode:
	_CHECK_HOMED
	QUERY_PROBE
	_MAYBE_DOCK_PROBE

[gcode_macro _MAYBE_DOCK_PROBE]
gcode:
    {% set probe_triggered = printer.probe.last_query %}
	{% set safe_z_height = printer["gcode_macro _VARS"].z_height_for_dock %}
	{% if probe_triggered %}
	  # Could be triggered either because not attached, or because
	  # attached but touching the bed.
	  {% if printer.toolhead.position.z < safe_z_height %}
        # Move to safe height and try again.
	    _MOVE_TO_SAFE_Z_FOR_DOCK
	    QUERY_PROBE
	  {% endif %}
	{% endif %}
    _DOCK_PROBE

[gcode_macro _DOCK_PROBE]
gcode:
    {% set probe_detached = printer.probe.last_query %}
	{% if not probe_detached %}
  	  {% set dock_x = printer["gcode_macro _VARS"].dock_location_x %}
  	  {% set dock_y = printer["gcode_macro _VARS"].dock_location_y %}
  	  {% set feedrate = printer["gcode_macro _VARS"].dock_move_speed * 60 %}
  	  {% set offset_y = printer["gcode_macro _VARS"].dock_attach_offset_y %}
  	  {% set offset_x = printer["gcode_macro _VARS"].dock_postdock_offset_x %}
	  {% set predock_y = dock_y - offset_y %}
	  {% set postdock_x = dock_x + offset_x %}
	  _MOVE_TO_SAFE_Z_FOR_DOCK
	  G90
	  {% if printer.toolhead.position.y > predock_y %}
        G0 Y{predock_y} F{feedrate}
	  {% endif %}
	  G0 X{dock_x} Y{predock_y} F{feedrate}
	  G0 Y{dock_y} F{feedrate}
	  G0 X{postdock_x} F{feedrate}
	  G0 Y{predock_y} F{feedrate}
	{% endif %}
	_ASSERT_PROBE WANT_ATTACHED=0

[gcode_macro PROBE]
rename_existing: _UNSAFE_PROBE
gcode:
	SAVE_GCODE_STATE NAME=probe
	ATTACH_PROBE
	RESTORE_GCODE_STATE NAME=probe MOVE=1 MOVE_SPEED=12000
	_UNSAFE_PROBE
	SAVE_GCODE_STATE NAME=probe
	DOCK_PROBE
	RESTORE_GCODE_STATE NAME=probe MOVE=1 MOVE_SPEED=12000

[gcode_macro PROBE_ACCURACY]
rename_existing: _UNSAFE_PROBE_ACCURACY
gcode:
	SAVE_GCODE_STATE NAME=probe
	ATTACH_PROBE
	RESTORE_GCODE_STATE NAME=probe MOVE=1 MOVE_SPEED=12000
	_UNSAFE_PROBE_ACCURACY
	SAVE_GCODE_STATE NAME=probe
	DOCK_PROBE
	RESTORE_GCODE_STATE NAME=probe MOVE=1 MOVE_SPEED=12000

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _UNSAFE_QUAD_GANTRY_LEVEL
gcode:
	ATTACH_PROBE
	_UNSAFE_QUAD_GANTRY_LEVEL
	DOCK_PROBE








[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
