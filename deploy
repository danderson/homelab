#!/usr/bin/env bash
# -*- mode: shell-script -*-

set -euo pipefail

if [ $# -lt 2 ]; then
    echo "Usage: $0 host|all nixos-cmd nixos-args..."
    exit 1
fi

onehost() {
	host=$1
	shift
	mkdir -p .gcroots
	set -x
	out=$(nix build -o .gcroots/${host} --json .#nixosConfigurations.${host}.config.system.build.toplevel | jq -r '.[0].outputs.out')

	nix copy -s --to "ssh://root@$host" "$out"
	nix copy -s --derivation --to "ssh://root@$host" "$out"

	if [ "$1" = "diff" ]; then
		tmpfile=$(mktemp nix-diff.XXXXXX)
		ssh "root@$host" "nix-store -qd /run/current-system $out | xargs nix-diff --color=always" >"$tmpfile"
		less -R "$tmpfile"
		rm -f "$tmpfile"
	else
		ssh "root@$host" nix build --profile /nix/var/nix/profiles/system "$out"
		ssh "root@$host" nix shell -vv "$out" -c switch-to-configuration "$@"
	fi
	set +x
}

host=$1
shift
if [[ "$host" == "all" ]]; then
	for host in `./all-hosts`; do
		echo
		echo "##################################"
		echo "# $host"
		echo "##################################"
		echo
		if ! ping -c1 -w3 $host >/dev/null; then
			echo "Offline, skipping"
		else
			read -p "Deploy (Y/n) ? " resp
			if [[ $resp =~ ^[Yy]?$ ]]; then
				onehost "$host" "$@"
			else
				echo "$host skipped"
			fi
		fi
	done
else
	onehost "$host" "$@"
fi
