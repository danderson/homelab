#!/usr/bin/env bash
# -*- mode: shell-script -*-

set -euo pipefail

if [ $# -lt 2 ]; then
    echo "Usage: $0 host|all nixos-cmd nixos-args..."
    exit 1
fi

onehost() {
	host=$1
    action=$2
	shift 2

    mkdir -p .gcroots
    set -x
    out=$(nix build -o .gcroots/${host} --json .#nixosConfigurations.${host}.config.system.build.toplevel | jq -r '.[0].outputs.out')
    nix copy -s --to "ssh://root@$host" "$out"

    set +x
    if [[ "$action" == "dry" || "$action" == "diff" ]]; then
        action="dry-activate"
    else
        set -x
        ssh "root@$host" nix build --profile /nix/var/nix/profiles/system "$out"
        set +x
    fi
    set -x

    ssh "root@$host" nix shell -vv "$out" -c switch-to-configuration "$action" "$@"
    set +x
}

host=$1
shift
confirm=0
if [[ "$host" == "some" ]]; then
    host="all"
    confirm=1
fi
if [[ "$host" == "all" ]]; then
	for host in `./all-hosts`; do
		echo
		echo "##################################"
		echo "# $host"
		echo "##################################"
		echo
		if ! ping -c1 -w3 $host >/dev/null; then
			echo "Offline, skipping"
		else
            if [[ "$confirm" == "1" ]]; then
			    read -p "Deploy (Y/n) ? " resp
			    if [[ $resp =~ ^[Yy]?$ ]]; then
				    onehost "$host" "$@"
			    else
				    echo "$host skipped"
			    fi
            else
                onehost "$host" "$@"
            fi
		fi
	done
else
	onehost "$host" "$@"
fi
